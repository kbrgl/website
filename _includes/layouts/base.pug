doctype html
html(lang="en")
    head
        meta(charset="utf-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        meta(name="generator" content=eleventy.generator)

        title= title || metadata.title
        meta(name="title" content=title || metadata.title)
        meta(name="description" content=description || metadata.description)

        meta(property="og:type" content="website")
        meta(property="og:url" content=metadata.url)
        meta(property="og:title" content=title || metadata.title)
        meta(property="og:description" content=description || metadata.description)
        meta(property="og:image" content=preview || metadata.preview)

        meta(property="twitter:card" content="summary_large_image")
        meta(property="twitter:url" content=metadata.url)
        meta(property="twitter:title" content=title || metadata.title)
        meta(property="twitter:description" content=description || metadata.description)
        meta(property="twitter:image" content=preview || metadata.preview)

        link(rel="canonical" href=metadata.url)
        link(rel="alternate" href=metadata.feed.path type="application/atom+xml" title=metadata.title)
        link(rel="alternate" href=metadata.jsonfeed.path type="application/json" title=metadata.title)

        link(rel="stylesheet" href="/prism-theme.css")
        link(rel="stylesheet" href="https://use.typekit.net/fdo8xxu.css")
        link(rel="stylesheet" href="/app.css")
        script.
            if (!['light', 'dark'].includes(localStorage.theme)) {
                localStorage.removeItem('theme');
            }

            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');
            let switcher;

            function initTheme() {
                document.documentElement.classList.toggle(
                    'dark',
                    localStorage.theme === 'dark' || (!('theme' in localStorage) && prefersDark.matches)
                )

                switcher.dataset.theme = localStorage.theme || 'system';
            }

            function switchThemes() {
                if (!('theme' in localStorage)) {
                    localStorage.theme = 'light';
                } else if (localStorage.theme === 'dark') {
                    localStorage.removeItem('theme');
                } else if (localStorage.theme === 'light') {
                    localStorage.theme = 'dark';
                }

                initTheme();
            }

            document.addEventListener('DOMContentLoaded', () => {
                switcher = document.querySelector('button[data-theme]');
                initTheme();
            });

            prefersDark.addEventListener('change', () => {
                initTheme();
            });

            initTheme();


    body(class="bg-gray-100 text-gray-900 dark:bg-zinc-900 dark:text-white")
        | !{ content }
        script(src="https://unpkg.com/swup@4")
        script.
            const swup = new Swup();
